import React from 'react';
import PropTypes from 'prop-types';
import styles from './ErrorState.module.css';

const ErrorState = ({
  icon = "‚ö†Ô∏è",
  title = "Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§",
  description = "Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî",
  primaryActionText = "Îã§Ïãú ÏãúÎèÑ",
  secondaryActionText = "Ïù¥Ï†Ñ ÌéòÏù¥ÏßÄ",
  onPrimaryAction = null,
  onSecondaryAction = null,
  variant = "default", // default, network, server, notFound
  className = "",
  showActions = true
}) => {
  // Î≥ÄÌòïÎ≥Ñ Í∏∞Î≥∏ ÏÑ§Ï†ï
  const getVariantConfig = () => {
    switch (variant) {
      case 'network':
        return {
          icon: "üì°",
          title: "ÎÑ§Ìä∏ÏõåÌÅ¨ Ïò§Î•ò",
          description: "Ïù∏ÌÑ∞ÎÑ∑ Ïó∞Í≤∞ÏùÑ ÌôïÏù∏ÌïòÍ≥† Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî"
        };
      case 'server':
        return {
          icon: "üîß",
          title: "ÏÑúÎ≤Ñ Ïò§Î•ò",
          description: "ÏùºÏãúÏ†ÅÏù∏ ÏÑúÎ≤Ñ Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§"
        };
      case 'notFound':
        return {
          icon: "üîç",
          title: "ÌéòÏù¥ÏßÄÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§",
          description: "ÏöîÏ≤≠ÌïòÏã† ÌéòÏù¥ÏßÄÍ∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§"
        };
      case 'unauthorized':
        return {
          icon: "üîê",
          title: "Ï†ëÍ∑º Í∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§",
          description: "Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌïòÍ±∞ÎÇò Í∂åÌïúÏù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§"
        };
      default:
        return { icon, title, description };
    }
  };

  const config = getVariantConfig();
  const displayIcon = icon !== "‚ö†Ô∏è" ? icon : config.icon;
  const displayTitle = title !== "Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§" ? title : config.title;
  const displayDescription = description !== "Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî" ? description : config.description;

  const handlePrimaryAction = () => {
    if (onPrimaryAction) {
      onPrimaryAction();
    } else {
      // Í∏∞Î≥∏ ÎèôÏûë: ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ®
      window.location.reload();
    }
  };

  const handleSecondaryAction = () => {
    if (onSecondaryAction) {
      onSecondaryAction();
    } else {
      // Í∏∞Î≥∏ ÎèôÏûë: Ïù¥Ï†Ñ ÌéòÏù¥ÏßÄÎ°ú
      window.history.back();
    }
  };

  return (
    <div className={`${styles.container} ${styles[variant]} ${className}`}>
      <div className={styles.content}>
        <div className={styles.icon} role="img" aria-label="ÏóêÎü¨ ÏïÑÏù¥ÏΩò">
          {displayIcon}
        </div>
        <h3 className={styles.title}>{displayTitle}</h3>
        <p className={styles.description}>{displayDescription}</p>
        
        {showActions && (
          <div className={styles.actions}>
            <button 
              className={styles.primaryButton}
              onClick={handlePrimaryAction}
              type="button"
            >
              {primaryActionText}
            </button>
            <button 
              className={styles.secondaryButton}
              onClick={handleSecondaryAction}
              type="button"
            >
              {secondaryActionText}
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

ErrorState.propTypes = {
  icon: PropTypes.string,
  title: PropTypes.string,
  description: PropTypes.string,
  primaryActionText: PropTypes.string,
  secondaryActionText: PropTypes.string,
  onPrimaryAction: PropTypes.func,
  onSecondaryAction: PropTypes.func,
  variant: PropTypes.oneOf(['default', 'network', 'server', 'notFound', 'unauthorized']),
  className: PropTypes.string,
  showActions: PropTypes.bool
};

export default ErrorState; 
